/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hankedan.jlogchart;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.math3.geometry.euclidean.twod.Vector2D;

/**
 *
 * @author daniel
 */
public class XY_ChartDemo extends javax.swing.JFrame {
    // Create and show the JLogChart GUI
    public XY_Chart chart = new XY_Chart();

    /**
     * Creates new form XY_ChartDemo
     */
    public XY_ChartDemo() {
        initComponents();
        chart.setPreferredSize(new Dimension(600, 400));
        chartPanel.add(chart, BorderLayout.CENTER);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        snapViewButton = new javax.swing.JButton();
        chartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XY_Chart Demo");

        snapViewButton.setText("Fit Data");
        snapViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapViewButtonActionPerformed(evt);
            }
        });
        getContentPane().add(snapViewButton, java.awt.BorderLayout.PAGE_START);

        chartPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(chartPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void snapViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapViewButtonActionPerformed
        chart.fitViewToData(true);
    }//GEN-LAST:event_snapViewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XY_ChartDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XY_ChartDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XY_ChartDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XY_ChartDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        FlatDarkLaf.install();
        
        XY_ChartDemo demo = new XY_ChartDemo();
        demo.setVisible(true);
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int N_SAMPS = 50;
                double radPerSamp = Math.PI * 2 / (N_SAMPS - 1);
                List<Vector2D> circData = new ArrayList();
                List<Vector2D> ovalData = new ArrayList();
                for (int i=0; i<N_SAMPS; i++) {
                    double angle = i * radPerSamp;
                    circData.add(new Vector2D(Math.cos(angle), Math.sin(angle)));
                    ovalData.add(new Vector2D(1.0 + 0.5 * Math.cos(angle), 0.75 * Math.sin(angle)));
                }
                Series circSeries = demo.chart.addSeries("circle", circData);
                Series ovalSeries = demo.chart.addSeries("oval", ovalData).setBolded(true);
                
                SeriesBoundMarker sbm = new SeriesBoundMarker(circSeries, new DotMarker(5));
                demo.chart.addSeriesBoundMarker(sbm);
                
                Thread t = new Thread(new Runnable() {
                    Logger logger = Logger.getLogger("Thread");
                    int offset = 0;
                    @Override
                    public void run() {
                        while (true) {
                            circSeries.setOffset(offset);
                            demo.repaint();
                            offset--;
                            try {
                                Thread.sleep(500, 0);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(XY_Chart.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                });
                t.start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    private javax.swing.JButton snapViewButton;
    // End of variables declaration//GEN-END:variables
}
